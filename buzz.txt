operator overloading method
__new__   Creation       Obj creation, before __init--
__init__  Constructor
__del__   Destructor
__add__   Operator +     x + y, x += y if no __iadd__
__or__    Operator | (bitwise OR)  x|y, x |= y if no __ior__
__repr__,__str__  Printing,conversion   print(x)  repr(x), str(x)
__call    Function calls    X(*args, **kargs)
__getattr__  Attribute fetch    X.undefined
__setattr__  Attribute assign   X.any = v
__delattr__  Attribute deletion del X.any
__getattribute__  Attribute fetch    X.any
__getitem__  Indexing,slicing,iteration    x[k],x[i:j] if no __iter__
__setitem__  Index and slice assign     x[k]=v, x[i:j]=iterable
__delitem__  Index and slice deletion    del x[k], del x[i:j]
__len__      length                     len(x), truth tests if no __bool__
__bool__     boolean tests              bool(x), truth tests(__nonzero__ in 2.x)
__eq__ __ne__ __le__ __lt__ __ge__ __gt__
             Comparison                x<, <=, ==, !=, >=, >(or else __cmp__ in 2.X only)
__radd__     Right-side op             Other + x
__iadd__     In-place augmened op      X += y (or else __add__)
__iter__,__next__   Iteration contexts   i = iter(x), next(i); for loops, if no __contains__, all comprehensions, map(f,x), other(__next__ is named next in 2.x)
__contains__   Membership test         a in x(any iterable)
__index__    Integer value             hex(x), bin(x),oct(x), O[x], o[x:] (replace 2.x __oct__, __hex__)
__enter__, __exit__  Context manager   with obj as var:
__get__,__set__,__delete__    Descriptor attr     X.attr, X.attr=v, del X.attr

built-in function:
abs
ascii
bin
bytes
chr
classmethod
compile
complex
super
dict
dir
help
eval
exec
execfile
format
built-in functions for functional programming
frozenset
hex
id
__import__
input
isinstance
iter
next
hex/oct
open
ord
print
pow
property
repr
raw_input
reload
reversed
round
set
getattr/setattr
sorted
staticmethod
sum
tuple
type

#define
#include
Benevolent Dictator for Life (BDFL) - Guido van Rossum is anointed
Graphical User Interface(GUI)
curly braces {}
square brackets []
byte order marker (BOM)
diamond inheritance tree
duck typing
strong typing
dynamic typing
if/else ternary expression
   x if y else z (x is evaluated only if y is true)
JIT(just-in-time) compiler

DOM parsing
depth-first, left-to-right(DFLR)
(FIFO) first-in-first-out (LIFO) last-in-first-out
Python Environment Variables:
  PATH(or path)  System shell search path(for finding "python")
  PYTHONPATH     Python module search path(for imports)
  PYTHONSTARTUP  path to python interactive startup file
  PY_PYTHON PY_PYTHON2 PY_PYTHON3  Windows launcher defaults
  TCL_LIBRARY/TK_LIBRARY  GUI extension variables(tkinter)
__init__.py  new namespace pkg model changed in 3.3, where new-style pkg may

ArithmeticError
AssertionError
AttributeError
EOFError
FloatingPointError
IndexError
LookupError
NotImplementedError
OSError
OverflowError
TypeError
ZeroDivisionError
BaseException
Exception
Python Software Foundation(PSF)
Python Enhancement Proposal(PEP)
queues  best-first searches, FIFO
proxy class(wrappers)
chaining exceptions
KISS principle
new-style class
object-oriented programming(OOP)

most useful built-in functions:
open for file
str/int/float
len
enumerate
min/max/all/any
range/xrange  list(range(0,6,2)) [0, 2, 4]
getattr/setattr/hasattr
apply/zip/filter/map/reduce

IDEs
(ORMs)
(PVM)
(RIAs)
(backslash)
(bool
(byte
(decimal
(equivalence)
(integrated
(left-shift)
**args
**kargs
*arg
*pargs
<<
>>>
API
ASCII
Android
Appendix
BDFL
BOM
Boolean
CSV
CWD
Cygwin

  CPython: The standard
  Cython: Python/C hybrid
  Shed Skin:Python-to-C++ translator
  IronPython: Python for .NET
  Jython: Python for Java
  PyPy: Python for speed
  Stackless: Python for concurrency
  Psyco: The original just-in-time compiler
IDE:
  Eclipse with PyDev plugin
  Komodo
  NetBeans
  PythonWin IDE
  Wing
  IDLE

wxPython
EBCDIC
EIBTI
Editor
ElementTree
End-of-Part
FieldStorage
HTML
Index
Internet
JSON
KeyboardInterrupt
LEGB
Latin-1
MRO
Machine
Matlab
MongoDB
None
NotImplemented
NumPy
ORMs
OS
OrderedDict
PEP
PMW
PSF
PVM
PYTHONIOENCODING
Parrot
Peters
PyChecker
PyDoc
PyInstaller
PyLint
PyMongo
PySerial
PySolFC
PyUnit
Pyrolog
PythonLauncher
RIAs
Registry
SAX
SQL
SciPy
ScientificPython
Send
Sphinx
StopIteration
Swallow
Symbols
SystemExit
Tim
Unicode UTF-8 UTF-16
Unix-style
Unladen
Virtual
Windows
Winpdb
XML
ZODB
_
__
__all__
__annotations__
__bases__
__builtin__
__class__
__cmp__
__context__
__debug__
__dict__
__file__
__format__
__future__
__getslice__
__hex__
span multi dirs and require no __init__.py
__main__
__mod__
__mro__
__name__
__oct__
__pycache__
__rmod__
__setslice__
__sub__
_exit
_thread
_x
about
absolute
abstract
access
access-by-key
accessing
accessor
accuracy
acronym
actions
adding
addition
additional
address
advanced
algorithm
alternative
and
annotations
anonymous functions
append
applications
arbitrary
architecture
argparse
argument
argument-passing
arguments
argv
arrays
as
as_integer_ratio
aspect-oriented
assert
assigning
assignment
assignments
asterisk
at
atexit
attribute
attributes
augmented
augmenting
automatic
avoiding
awk
backslash
backtracking
base
based
basic
benchmark
benchmarking
best-first
big-endian
binaries
binary
bit_length
bitwise
blank
block
blocks
blunders
bound
boundary
bounds
branching
break
breaking
bsddb
building
builtins
by
byte
bytearray
cPickle
calculating
call
callbacks
calling
calls
case
casefold
cases
catchall
catching
categories
certificate
cgi.FieldStorage
chained
change
changes
changing
character
characters
checking
checks
circular
clashes
class
class-based
clause
clear
clicking
clicks
client
clock
close
closing
closures
codecs
cohesion
collection
collections
collisions
colon
colors
comma
command
command-line
commands
comment
comments
common
community
compared
comparing
comparison
comparisons
compilation
compiled
completion
component
composition
compound
comprehension
concatenating
concatenation
concepts
conceptual
conditions
configuring
conflict
connections
constants
constraints
constructor
content
context
contextlib
continuation
continue
control
control-flow
convention
conventions
conversion
conversions
converter
converting
copies
copy
copying
core
count
counter
counters
counting
coupling
creating
cross-file
csv
currency
custom
customer
customization
cx_freeze
cycle
cycles
cyclic
data
database
databases
dbm/anydbm
debates
debugger
decimal
declaration
decode
decoding
decorating
decorator
decorators
decorators;
def
default
defaults
defined
defining
definition
del
delegation
deleting
delimiters
delimiting
deprecation
depth
derived
descriptor
descriptors
design
designators
destruction
destructor
details
dictionary
dictionary comprehension
difference
directions
directive
directives
display
displaying
displays
distutils
division
doc__
docstrings
doctest
documentation
dot
double
dual
editor
eggs
elif/else
else
email
embedded
embedding
empty
emulating
enabling
encapsulation
enclosing
encode
encoded
encoding
encodings
endianness
endswith
env
environment
equality
equivalence
errno
error
errors
escape
etree
event
everything
exc_info
excepthook
executable
executing
execution
exercises
exit
experimenting
explicit
exploring
exponentiation
extend
extended
extending
extension
extensions
factorials
factories
factory
false/true
features
fetches
file
filenames
filesystems
find
findall
first-class
flag
flexibility
floating-point
floor
flows
flush
for
form
formal
formats
formatting
forms
fraction
fractions
freeze
from
from_float
fromkeys
frozen
function
function-related
functional
functions
functions;
functools
future
garbage
gc
general
generating
generation
generator
generators
generic
get
getcontext
getopt
getrecursionlimit
global
go
gotchas
grouping
handler
handlers
handling
has_key
hash
hear
helper
hexadecimal
hiding
hierarchies
hierarchy
homegrown
iOS
if
immutable
imp.reload
impacts
implementation
implementation-related
implementing
implicit
import
import/from
important
imported
importing
importlib.import_module
imports
improvement
improving
in
in-place
indenting
index
index@oreilly.com.
indexes.
indexing
indirect
information
inheritance
inherited
initialization
inline
inputs
insert
inspecting
instance
instances
integer-based
integrated
interactive
intercepting
interception
interchangeable
interface
interfaces
interpreter
intersecting
introspection
is
is_integer
isdigit
issues
items
iterable
iterables
iteration
iterations
iterators
join
json
jump
keys
keyword
lambda
larger
launch
launcher
launching
left-shift
legacy
lengths
lexical
library
like
limitations
limiting
lines
list
list comprehension
list-unpacking
literals
little
little-endian
local
localcontext
locating
logical
lookup
loop
looping
loops
macros
make
making
management
manager
managers
managing
mangling
manual
mapattrs
mappers
mapping
marks
markup
match
math
matrix
membership
memory
metaclass
metafunctions
method
microthreads
minimizing
mismatches
missing
mistakes
mix-in
mixed
mixin
mixing
mod_python
mode
model
modes
modifying
module
modules
modulus
movie
much
multiline
multiple
multiple-target
multiplication
multiplying
multithreading
multiway
mutable
name
named
namedtuple
names
namespace
namespaces
naming
nature
nested
nesting
neutralizing
new
non-ASCII
nonexhaustive
nonlocal
normal
notation
notes
notification
number-specific
numbers
numeric
occurrence
octal
on
one-shot
one-time
operation
operations
operator
operators
optimization
optimizing
options
optparse
or
ordering
os
other
our
out
output
over
overloading
overview
package
paradox
parallel
parameters
parentheses
part
pass
passing-arguments-by-pointer
passing-arguments-by-value
pattern
patterns
pdb
per
percent
perf_counter
permutations
persistence
perspective
pexpect
pformat
pickle
pillar
pillars
pitfalls
place
platform
plus
pointers
points
pollution
polymorphism
pop
popen
popitem
portability
positional
possibilities
potential
pprint
precedence
precision
prefix
preset
prints
privacy
private
procedures
process
process_time
profile
project
projects
prompt
prompting
prompts
propagating
properties
protocol
prototyping
pseudoprivate
pstats
public
py2app
py2exe
pydoc.py
pygame
pystone.py
qualification
questions
queue
quit
quotation
quotes
raise
raising
random
range-testing
rapid
rational
re
reStructuredText
read
read-only
readline readlines writelines xreadlines
realistic
recording
recursion
recursive
redirection
reference
references
referencing
relational
relative
reloaders
reloading
reloads
remove
repeat
repeating
repetition
replace
representation
reserved
resolution
resources
results
retaining
retention
return
reuse
reverse
rich
roles
roots
routing
rstrip
rule
runtime
scans
schemes
scope
scopes
scoping
scrambled
scraping
screen
script
scripting
scripts
search
seek
selecting
selection
self
semantics
semicolon
send
sentinel
sequence
sequences
serialization
server
session
sessions
setdefault
setrecursionlimit
sets
setting
setup
shadowing
shared
shell
shelve
shufflers
sign
signaling
simulating
single
singleton
slice
slicing
slots
socket
sort
sorting
sorts
source
sources
spaces
specializing
speed
split
stack
standard
startup
state
statement
static
stderr/stdin/stdout
steps
storing
stream
strengths
strides
string
string-based
struct
subclass
subprocess
summation
superclass
support
symbol
symbols
syntax
sys
systeminfo
systems
tables
tabs
terminating
termination
test
text
this
threading
time
timeit
timestamps
timing
timsort
tips
tkinter
tool
toolkit
tools
traceback
traces
tracing
tradeoffs
traditional
translation
traversals
tree
trick
triggering
triple
triple-quoted
trunc
truncating
truth
try/except/else/finally
tuple-based
tuple-unpacking
tutorial
type-specific
unbound
underscore
unicode
unittest
unpacking
update
usability
using
utility
validating
value
varargs
variable
variants
variations
version
version-neutral
view
viewitems
viewkeys
viewvalues
virtual
walk
walkers
warnings
weak
weakref
while
win32all
with
with/as
write
yield
